#!/usr/bin/env ruby

require 'dropbox_sdk'
require 'readline'

require_relative 'commands'
require_relative 'settings'
require_relative 'state'

APP_KEY = '5sufyfrvtro9zp7'
APP_SECRET = 'h99ihzv86jyypho'

def authorize
  flow = DropboxOAuth2FlowNoRedirect.new(APP_KEY, APP_SECRET)

  authorize_url = flow.start()

  # Have the user sign in and authorize this app
  puts '1. Go to: ' + authorize_url
  puts '2. Click "Allow" (you might have to log in first)'
  puts '3. Copy the authorization code'
  print 'Enter the authorization code here: '
  code = gets.strip

  # This will fail if the user gave us an invalid authorization code
  begin
    access_token, user_id = flow.finish(code)
    Settings[:access_token] = access_token
  rescue DropboxError
    puts 'Invalid authorization code.'
  end
end

def get_access_token
  until Settings.include?(:access_token)
    authorize()
  end
  Settings[:access_token]
end

client = DropboxClient.new(get_access_token())
info = client.account_info
puts "Logged in as #{info['display_name']} (#{info['email']})"

state = State.new

def prompt(info, state)
  "rubox #{info['email']}:#{state.pwd}> "
end

begin
  while line = Readline.readline(prompt(info, state), true)
    Commands.exec(line.chomp, client, state)
  end
  puts
rescue Interrupt
  puts
end

Settings.write
