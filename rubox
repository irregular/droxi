#!/usr/bin/env ruby

require 'pathname'
require 'dropbox_sdk'

require_relative 'settings'

APP_KEY = '5sufyfrvtro9zp7'
APP_SECRET = 'h99ihzv86jyypho'

def authorize
  flow = DropboxOAuth2FlowNoRedirect.new(APP_KEY, APP_SECRET)

  authorize_url = flow.start()

  # Have the user sign in and authorize this app
  puts '1. Go to: ' + authorize_url
  puts '2. Click "Allow" (you might have to log in first)'
  puts '3. Copy the authorization code'
  print 'Enter the authorization code here: '
  code = gets.strip

  # This will fail if the user gave us an invalid authorization code
  begin
    access_token, user_id = flow.finish(code)
    Settings[:access_token] = access_token
  rescue DropboxError
    puts 'Invalid authorization code.'
  end
end

def get_access_token
  until Settings.include?(:access_token)
    authorize()
  end
  Settings[:access_token]
end

client = DropboxClient.new(get_access_token())
info = client.account_info
puts "Logged in as #{info['display_name']} (#{info['email']})"

def cd(path, client)
  begin
    if client.metadata(path)['is_dir']
      $working_dir = path
    else
      puts 'Not a directory'
    end
  rescue DropboxError => error
    puts 'No such file or directory'
  end
end

def ls(client)
  client.metadata($working_dir)['contents'].each do |data|
    puts Pathname.new(data['path']).basename
  end
end

def command(input, client)
  tokens = input.split

  case tokens[0]
  when 'cd' then cd(tokens[1], client)
  when 'ls' then ls(client)
  else puts "Unrecognized command: #{tokens[0]}"
  end
end

def prompt(client, info)
  print "rubox #{info['email']}:#{$working_dir}> "
  input = gets
  if input != nil
    command(input.chomp, client)
    true
  else
    puts
    false
  end
end

$working_dir = '/'

begin
  while prompt(client, info)
  end
rescue Interrupt
  puts
end
